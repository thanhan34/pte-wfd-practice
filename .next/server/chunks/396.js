"use strict";exports.id=396,exports.ids=[396],exports.modules={3784:(a,b,c)=>{c.d(b,{av:()=>j,db:()=>h,j2:()=>i});var d=c(7989),e=c(5535),f=c(6167);let g=null,h=null,i=null;try{g=(0,d.Wp)({apiKey:"AIzaSyC7LWF3rfk0K8l5BTjAxjHSmQotkOlJIt4",authDomain:"wfdpracticeroom.firebaseapp.com",projectId:"wfdpracticeroom",storageBucket:"wfdpracticeroom.firebasestorage.app",messagingSenderId:"998166005854",appId:"1:998166005854:web:c0a2e365b5d0cd6c4b0ccf",measurementId:"G-2Z5WQPZK2R"}),h=(0,e.aU)(g),i=(0,f.xI)(g),console.log("✅ Firebase initialized successfully")}catch(a){throw console.error("❌ Firebase initialization failed:",a),a}async function j(){try{if(!i)return!1;return new Promise(a=>{let b=i.onAuthStateChanged(()=>{b(),a(!0)},()=>{b(),a(!1)});setTimeout(()=>{b(),a(!1)},5e3)})}catch(a){return console.error("Firebase connection check failed:",a),!1}}},4780:(a,b,c)=>{function d(a,b){let c=a=>a.trim().toLowerCase().replace(/\s+/g," "),d=c(a),e=c(b),f=d.split(" ").filter(a=>a.length>0),g=e.split(" ").filter(a=>a.length>0),h=[],i=[],j=[],k=[],l=new Map,m=new Map;f.forEach(a=>{l.set(a,(l.get(a)||0)+1)}),g.forEach(a=>{m.set(a,(m.get(a)||0)+1)}),l.forEach((a,b)=>{let c=Math.min(a,m.get(b)||0);for(let a=0;a<c;a++)h.push(b)}),l.forEach((a,b)=>{let c=Math.max(0,a-(m.get(b)||0));for(let a=0;a<c;a++)j.push(b)}),m.forEach((a,b)=>{let c=Math.max(0,a-(l.get(b)||0));for(let a=0;a<c;a++)k.push(b)}),g.forEach(a=>{l.has(a)||i.push(a)});let n=f.length,o=h.length,p=0===j.length&&0===i.length&&0===k.length;return{correct:h,incorrect:i,missing:j,extra:k,isFullyCorrect:p,accuracy:Math.round(100*(n>0?o/n*100:0))/100}}function e(){let a="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",b="";for(let c=0;c<6;c++)b+=a.charAt(Math.floor(Math.random()*a.length));return b}function f(a){return a.toLocaleTimeString("vi-VN",{hour:"2-digit",minute:"2-digit",second:"2-digit"})}function g(a){return"submitted"===a.status?a.accuracy?.isFullyCorrect?"correct":"incorrect":a.status}function h(a,b){let c;return(...d)=>{clearTimeout(c),c=setTimeout(()=>a(...d),b)}}c.d(b,{CD:()=>g,S:()=>e,cG:()=>d,fU:()=>f,sg:()=>h})},9396:(a,b,c)=>{c.r(b),c.d(b,{authenticateUser:()=>j,createRoom:()=>k,deleteRoom:()=>q,getCurrentUser:()=>s,joinRoom:()=>l,leaveRoom:()=>p,setTargetPhrase:()=>m,submitAnswer:()=>n,subscribeToRoom:()=>r,updateTypingStatus:()=>o});var d=c(5535),e=c(6167),f=c(3784),g=c(4780);async function h(a,b=3){for(let c=0;c<b;c++)try{return await a()}catch(a){if(console.warn(`Operation attempt ${c+1} failed:`,a.message),c===b-1)throw a;await new Promise(a=>setTimeout(a,1e3*(c+1)))}throw Error("All retry attempts failed")}function i(a){return a&&a.toDate?a.toDate():new Date}async function j(){try{return(await (0,e.zK)(f.j2)).user}catch(a){throw console.error("Authentication error:",a),Error("Failed to authenticate user")}}async function k(a){return h(async()=>{if(!await (0,f.av)())throw Error("Firebase connection failed");let b=await j(),c=(0,g.S)(),e={hostId:b.uid,targetPhrase:"",createdAt:new Date,isActive:!0,participants:{[b.uid]:{nickname:a,status:"waiting",isTyping:!1,correctCount:0,totalAttempts:0}}};return await (0,d.BN)((0,d.H9)(f.db,"rooms",c),{...e,createdAt:(0,d.O5)()}),console.log(`✅ Room ${c} created successfully`),c})}async function l(a,b){try{let c=await j(),e=(0,d.H9)(f.db,"rooms",a),g=await (0,d.x7)(e);if(!g.exists())throw Error("Room not found");let h=g.data();if(!h.isActive)throw Error("Room is not active");let i={...h.participants,[c.uid]:{nickname:b,status:"waiting",isTyping:!1,correctCount:0,totalAttempts:0}};await (0,d.mZ)(e,{participants:i})}catch(a){throw console.error("Error joining room:",a),a}}async function m(a,b){try{let c=f.j2.currentUser;if(!c)throw Error("User not authenticated");let e=(0,d.H9)(f.db,"rooms",a),g=await (0,d.x7)(e);if(!g.exists())throw Error("Room not found");let h=g.data();if(h.hostId!==c.uid)throw Error("Only host can set target phrase");let i={},j={};Object.entries(h.participants).forEach(([a,b])=>{i[a]={nickname:b.nickname,status:"waiting",isTyping:!1,correctCount:b.correctCount||0,totalAttempts:b.totalAttempts||0},void 0!==b.submission&&(j[`participants.${a}.submission`]=(0,d.CL)()),void 0!==b.accuracy&&(j[`participants.${a}.accuracy`]=(0,d.CL)()),void 0!==b.submittedAt&&(j[`participants.${a}.submittedAt`]=(0,d.CL)())}),await (0,d.mZ)(e,{targetPhrase:b,participants:i,isCountingDown:!0,countdownStartedAt:(0,d.O5)()}),Object.keys(j).length>0&&await (0,d.mZ)(e,j),setTimeout(async()=>{try{await (0,d.mZ)(e,{isCountingDown:!1,roundStartTime:(0,d.O5)()})}catch(a){console.error("Error stopping countdown:",a)}},3e3)}catch(a){throw console.error("Error setting target phrase:",a),a}}async function n(a,b){try{let c=f.j2.currentUser;if(!c)throw Error("User not authenticated");let e=(0,d.H9)(f.db,"rooms",a),h=await (0,d.x7)(e);if(!h.exists())throw Error("Room not found");let j=h.data(),k=j.targetPhrase;if(!k)throw Error("No target phrase set");let l=(0,g.cG)(k,b),m=j.participants[c.uid],n=l.isFullyCorrect?(m.correctCount||0)+1:m.correctCount||0,o=(m.totalAttempts||0)+1,p={};if(l.isFullyCorrect&&j.roundStartTime){let a=Date.now()-i(j.roundStartTime).getTime(),b=[...m.completionTimes||[],a];p={completionTimes:b,averageTime:b.reduce((a,b)=>a+b,0)/b.length,fastestTime:Math.min(...b)}}let q={...j.participants,[c.uid]:{...j.participants[c.uid],status:"submitted",submission:b,accuracy:l,submittedAt:(0,d.O5)(),isTyping:!1,correctCount:n,totalAttempts:o,...p}};await (0,d.mZ)(e,{participants:q})}catch(a){throw console.error("Error submitting answer:",a),a}}async function o(a,b){try{let c=f.j2.currentUser;if(!c)return;let e=(0,d.H9)(f.db,"rooms",a),g=await (0,d.x7)(e);if(!g.exists())return;let h=g.data(),i=h.participants[c.uid];if(!i||"submitted"===i.status)return;let j={...h.participants,[c.uid]:{...i,status:b?"typing":"waiting",isTyping:b}};await (0,d.mZ)(e,{participants:j})}catch(a){console.error("Error updating typing status:",a)}}async function p(a){try{let b=f.j2.currentUser;if(!b)return;let c=(0,d.H9)(f.db,"rooms",a),e=await (0,d.x7)(c);if(!e.exists())return;let g=e.data(),h={...g.participants};delete h[b.uid],g.hostId===b.uid?(await (0,d.kd)(c),console.log(`✅ Room ${a} deleted (host left)`)):await (0,d.mZ)(c,{participants:h})}catch(a){console.error("Error leaving room:",a)}}async function q(a){try{let b=f.j2.currentUser;if(!b)throw Error("User not authenticated");let c=(0,d.H9)(f.db,"rooms",a),e=await (0,d.x7)(c);if(!e.exists())throw Error("Room not found");if(e.data().hostId!==b.uid)throw Error("Only host can delete room");await (0,d.kd)(c),console.log(`✅ Room ${a} deleted`)}catch(a){throw console.error("Error deleting room:",a),a}}function r(a,b){let c=(0,d.H9)(f.db,"rooms",a);return(0,d.aQ)(c,a=>{a.exists()?b(function(a){let b=a.data();return{id:a.id,hostId:b.hostId,targetPhrase:b.targetPhrase||"",createdAt:i(b.createdAt),isActive:b.isActive||!1,participants:b.participants||{},countdownStartedAt:b.countdownStartedAt?i(b.countdownStartedAt):void 0,isCountingDown:b.isCountingDown||!1,roundStartTime:b.roundStartTime?i(b.roundStartTime):void 0,currentPhraseIndex:b.currentPhraseIndex,shouldPlayAudio:b.shouldPlayAudio||!1}}(a)):b(null)},a=>{console.error("Error listening to room updates:",a),b(null)})}function s(){let a=f.j2.currentUser;return a?{id:a.uid,nickname:"",isHost:!1,joinedAt:new Date}:null}}};